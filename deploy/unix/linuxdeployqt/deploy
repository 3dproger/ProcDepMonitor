#!/bin/bash

# MIT License
#
# Copyright (c) 2020 Alexander Kirsanov
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#Версия программы
export VERSION="1.1.2"

#Указываем архитектуру
export ARCH="x86_64"

#Путь к qmake
QMakeExecutable="${HOME}/Qt/5.12.6/gcc_64/bin/qmake"

echo "Version: \"$VERSION\""
AppName="procdepmonitor"
AppDir="../amd64/appdir"
IconsDir="icons"

TargetBinaryDir="$AppDir/usr/bin"
TargetBinary="$TargetBinaryDir/$AppName"
DesktopFile="app.desktop"
DesktopFileTargetDir="$AppDir/usr/share/applications"
DesktopFileTarget="$DesktopFileTargetDir/$AppName.desktop"
#ResCommonDir="../../deploy/desktop/RelatedFiles/common"
#ResCommonUnixDir="../../deploy/desktop/RelatedFiles/unix/x86_64"
LibTargetDir="$AppDir/usr/lib"

#Проверяем наличие qmake
if [ ! -f "$QMakeExecutable" ]; then
  echo "Error: \"${QMakeExecutable}\" not found. Can not continue."
  exit 1
fi

#Проверяем наличие папки с программой
if [ ! -d "$AppDir" ]; then
  echo "Error: \"${AppDir}\" not found. Can not continue."
  exit 1
fi

#ToDo: возможно стиот добавить скрипт для очистки старых файлов

#Копируем из папки common
#if [ -d "$ResCommonDir" ]; then
#  cp -rf "$ResCommonDir/." "$TargetBinaryDir/"
#else
#  echo "Warning: \"${ResCommonDir}\" not found!"
#fi

#Копируем из обще папки для всех систем
#if [ -d "$ResCommonDir" ]; then
#  cp -rf "$ResCommonDir/." "$TargetBinaryDir/"
#else
#  echo "Warning: \"${ResCommonDir}\" not found!"
#fi

#Копируем из общей папки для unix
#if [ -d "$ResCommonUnixDir" ]; then
#  cp -rf "$ResCommonUnixDir/." "$TargetBinaryDir/"
#else
#  echo "Warning: \"${ResCommonUnixDir}\" not found!"
#fi

#Удаляем старую иконку
if [ -f "$AppDir/$AppName.png" ]; then
  rm "$AppDir/$AppName.png"
fi

#Копируем иконки
if [ ! -d "$IconsDir" ]; then
  echo "Warning: \"${IconsDir}\" not found!"
fi

mkdir -p "$AppDir/usr/share"

cp -rf "$IconsDir" "$AppDir/usr/share"

mkdir -p "$AppDir/usr/share/metainfo"
cp -f "procdepmonitor.metainfo.xml" "$AppDir/usr/share/metainfo"

#Удаляем старую ненужную ссылку AppRun
if [ -L "$AppDir/AppRun" ]; then
  rm "$AppDir/AppRun"
fi

#Удаляем старый ненужный *.desktop файл
if [ -f "$AppDir/$AppName.desktop" ]; then
  rm "$AppDir/$AppName.desktop"
fi

#Копируем *.desktop
if [ -f "$DesktopFile" ]; then
  mkdir -p "$DesktopFileTargetDir"
  cp -f "$DesktopFile" "$DesktopFileTargetDir/$AppName.desktop"
else
  echo "Warning: \"${DesktopFile}\" not found!"
fi

#Копируем SSL библиотеки
#mkdir -p "$LibTargetDir"
#cp -f "OpenSSLLibs/libcrypto.so.1.1" "$LibTargetDir"
#cp -f "OpenSSLLibs/libssl.so.1.1" "$LibTargetDir"

#Проверяем наличие исполнительного файла
if [ ! -f "$TargetBinary" ]; then
  echo "Error: \"${TargetBinary}\" not found. Can not continue."
  exit 1
fi

#Запускаем сборщик linuxdeployqt
./linuxdeployqt-6-x86_64.AppImage "$DesktopFileTarget" -always-overwrite -appimage -extra-plugins=imageformats/libqsvg.so -qmake="$QMakeExecutable"
